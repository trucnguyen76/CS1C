/**********************************************************************************
* AUTHOR        : Elva Nguyen
* STUDENT ID    : 366160
* LAB 5			: Inheritance - Cylinder Type
* CLASS         : CS1C
* SECTION       : T TH 6 - 8:50
* DUE DATE      : 9/4/2014
**********************************************************************************/
#include "Circle.h"
						/**********************
						 -----CONSTRUCTORS-----
						 **********************/
/**********************************************************************************
 * Circle()
 * --------------------------------------------------------------------------------
 * This default constructor will create a Circle object with a radius of 0
 *********************************************************************************/
Circle::Circle()
{
	setRadius(0);
}
/**********************************************************************************
 * Circle(double r)
 * --------------------------------------------------------------------------------
 * This non-default constructor will create a Circle object with a radius of r
 *********************************************************************************/
Circle::Circle(double r)		//The radius of the circle
{
	setRadius(r);
}
							/**********************
							 ------DESTRUCTORS-----
							 **********************/
/**********************************************************************************
 * ~Circle()
 * --------------------------------------------------------------------------------
 * This default destructor will delete the Circle object
 *********************************************************************************/
Circle::~Circle()
{}
							/******************
							 -----MUTATORS-----
							 ******************/
/**********************************************************************************
* setRadius()
* ---------------------------------------------------------------------------------
* 	This method will receive the Circle's radius and set it to the object radius
**********************************************************************************/
void Circle::setRadius(double r)	//The radius of the circle
{
	radius = (r >= 0? r : 0);
}
							/********************
							-----ACCESSORS-----
							********************/
/**********************************************************************************
* getRadius()
* ---------------------------------------------------------------------------------
* 	This method will return the circle's radius
**********************************************************************************/
double Circle::getRadius()		const
{
	return radius;
}
/**********************************************************************************
* area()
* ---------------------------------------------------------------------------------
* 	This method will calculate and return the circle's area
**********************************************************************************/
double Circle::area()			const
{
	return M_PI * radius * radius;
}
/**********************************************************************************
* circumference()
* ---------------------------------------------------------------------------------
* 	This method will calculate and return the circumference
**********************************************************************************/
double Circle::circumference()	const
{
	return 2 * M_PI * radius;
}
/**********************************************************************************
* outputCircle()
* ---------------------------------------------------------------------------------
* 	This method will return a string of the circle's information
**********************************************************************************/
string Circle::outputCircle()	const
{
	stringstream output;	//String Stream variable

	output << 	"The circle's radius is: " << radius << '\n'
		   << 	"The circle's area is: " << area() << '\n'
		   <<	"The circle's circumference is: " << circumference() << '\n';

	return 	output.str();
}
